plugins {
    id 'org.springframework.boot' version '2.2.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    //AsciiDoc 파일을 html로 컨버팅하고 Build 폴더에 복사하기 위한 플러그인입니다.
    id 'java'
}

group = 'kr.codesquad'
version = '1.0.0-Octocat'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}


repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    attributes "snippets": snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor //gradle build 시 asciidoctor -> bootJar 순으로 수행됩니다.
    from("${asciidoctor.outputDir}/html5") {
//gradle build 시 ./build/asciidoc/html5/ 에 html 파일이 생깁니다. 이것을 jar 안에 /static/docs/ 폴더에 복사가 됩니다.
        into 'static/docs'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // https://github.com/gavlyukovskiy/spring-boot-data-source-decorator
    // jpa 쿼리 파라미터를 볼 수 있도록 설정하는 외부 라이브러리입니다.
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.1'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1',
            // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
            // 'org.bouncycastle:bcprov-jdk15on:1.60',
            'io.jsonwebtoken:jjwt-jackson:0.11.1' // or 'io.jsonwebtoken:jjwt-gson:0.11.1' for gson
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.1.RELEASE'
}
